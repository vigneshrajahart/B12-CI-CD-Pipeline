name: Flask CI/CD Pipeline

on:
  push:
    branches:
      - main
      - staging
  release:
    types: [published]

jobs:
  install_dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  run_tests:
    runs-on: ubuntu-latest
    needs: install_dependencies
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run pytest
        run: pytest tests/

  deploy_staging:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'
    needs: run_tests
    steps:
      - uses: actions/checkout@v3
      - name: Deploy to Staging
        run: |
          echo "Deploying to staging..."
          # Add your staging deployment commands here
        env:
          STAGING_API_KEY: ${{ secrets.STAGING_API_KEY }}

  deploy_production:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: run_tests
    steps:
      - uses: actions/checkout@v3
      - name: Deploy to Production
        run: |
          echo "Deploying to production..."
          # Add your production deployment commands here
        env:
          PROD_API_KEY: ${{ secrets.PROD_API_KEY }}
